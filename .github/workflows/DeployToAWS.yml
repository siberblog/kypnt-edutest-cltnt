name: Deploy to AWS-EC2
on:
  push:
    branches:
      - main
jobs:
  merge_job:
    name: Build, Push and Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract project informations
        id: version
        run: |
          echo ::set-output name=sha_short::$(git rev-parse --short HEAD)
          echo ::set-output name=ECR_REGISTRY::${{ steps.login-ecr.outputs.registry }}

      - name: Build the Docker image
        env:
          ECR_REGISTRY: ${{ steps.version.outputs.ECR_REGISTRY }}
          REPO_NAME: ${{ secrets.SERVICE_NAME }}
          RUN_NUMBER: ${{ github.run_number }}
          SHA_SHORT: ${{ steps.version.outputs.sha_short }}
        run: |
          pwd
          docker build --file Dockerfile --tag=${ECR_REGISTRY}/${REPO_NAME}:latest --rm=true .
          docker tag ${ECR_REGISTRY}/${REPO_NAME}:latest ${ECR_REGISTRY}/${REPO_NAME}:v0.1.${RUN_NUMBER}-${SHA_SHORT}
          docker save -o ${REPO_NAME}.v0.1.${RUN_NUMBER}-${SHA_SHORT}.tar ${ECR_REGISTRY}/${REPO_NAME}:latest
          ls -la
          docker images

      - name: scp docker image to EC2
        uses: appleboy/scp-action@master
        env:
          ECR_REGISTRY: ${{ steps.version.outputs.ECR_REGISTRY }}
          REPO_NAME: ${{ secrets.SERVICE_NAME }}
          RUN_NUMBER: ${{ github.run_number }}
          SHA_SHORT: ${{ steps.version.outputs.sha_short }}
        with:
          host: ${{ secrets.AWS_EC2_PUBLIC_IP }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PEM }}
          port: 22
          overwrite: true
          source: ${REPO_NAME}.v0.1.${RUN_NUMBER}-${SHA_SHORT}.tar
          target: /home/ubuntu/docker_images/${REPO_NAME}

      - name: Push to AWS-ECR
        env:
          ECR_REGISTRY: ${{ steps.version.outputs.ECR_REGISTRY }}
          REPO_NAME: ${{ secrets.SERVICE_NAME }}
          RUN_NUMBER: ${{ github.run_number }}
          SHA_SHORT: ${{ steps.version.outputs.sha_short }}
        run: |
          docker push ${ECR_REGISTRY}/${REPO_NAME}:latest
          docker push ${ECR_REGISTRY}/${REPO_NAME}:v0.1.${RUN_NUMBER}-${SHA_SHORT}

      - name: Deploy to EC2 - executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_PUBLIC_IP }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PEM }}
          port: 22
          script: |
            ls -ls /home/ubuntu
            sudo docker ps -a
            ls -la
            pwd
            printenv
            sudo docker images
            echo ${{ env.AWS_EC2_PUBLIC_IP }}
            echo ${{ env.AWS_EC2_USERNAME }}
            echo ${{ env.SERVICE_NAME }}
